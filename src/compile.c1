#use <conio>

struct cparams_t {
    bool purity;
    bool warining;
    bool dump_ast;
};
typedef struct cparams_t cparams_t;

void c_debug_tokens(int n_tokens, l_token_t *[] tokens) {
    for (int i = 0; i < n_tokens; i++) {
        printf(
            "(%d %d) %s: %c\n",
            tokens[i]->row, tokens[i]->col, tokens[i]->str, tokens[i]->type
        );
    }
}

string compile(string code, cparams_t *params) {
    vec_t *tokens = l_tokenize(code);
    if (tokens == NULL) return "";

    p_result_t *result = p_parse_tokens(tokens);
    if (!result->successful) {
        printf(
            "Line %d, Col %d: %s\n",
            result->err_row, result->err_col, result->err_msg
        );

        return "";
    }

    println("Success");

    return "";
}