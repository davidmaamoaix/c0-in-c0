int LF(int i, int j, int k) {
  if (i < k) return i;

  return LF(i - j, j, k) + LF(i - k, j, k);
}

bool is_memo_table(int[] M, int len, int j, int k) {
  for (int i = 0; i <= len; i++) {
    if (M[i] != 0 && M[i] != LF(i, j, k)) return false;
  }

  return true;
}

int lf_memo(int[] M, int i, int j, int k) {
  if (M[i] != 0) return M[i];
  if (i < k) return i;

  int val = lf_memo(M, i - j, j, k) + lf_memo(M, i - k, j, k);
  M[i] = val;
  return val;
}

int fast_lf(int i, int j, int k) {
  int[] M = alloc_array(int, i + 1);
  return lf_memo(M, i, j, k);
}
